// RUN: compiler %s -llvm-dump 2>&1 | filecheck %s
// RUN: compiler %s -o immutable_parameters && ./immutable_parameters | grep -Plzx '\-50\n'
struct S {
  x: number,
  y: number,
}

fn foo(s: S, y: number): number {
  return s.x * -y;
}
// CHECK: define double @foo(%struct.S* readonly %s, double %y) {
// CHECK-NEXT: entry:
// CHECK-NEXT:   %retval = alloca double, align 8
// CHECK-NEXT:   %0 = getelementptr inbounds %struct.S, %struct.S* %s, i32 0, i32 0
// CHECK-NEXT:   %1 = load double, double* %0, align 8
// CHECK-NEXT:   %2 = fneg double %y
// CHECK-NEXT:   %3 = fmul double %1, %2
// CHECK-NEXT:   store double %3, double* %retval, align 8
// CHECK-NEXT:   br label %return
// CHECK-NEXT: 
// CHECK-NEXT: return:                                           ; preds = <null operand!>, %entry
// CHECK-NEXT:   %4 = load double, double* %retval, align 8
// CHECK-NEXT:   ret double %4
// CHECK-NEXT: }

fn main(): void {
  let s = S { x: 5, y: 10 };
  println(foo(s, 10));
}
