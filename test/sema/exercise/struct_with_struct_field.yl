// RUN: compiler %s -res-dump 2>&1 | filecheck %s
struct Point {
  x: number,
  y: number,
}
// CHECK: ResolvedStructDecl: @({{.*}}) Point:
// CHECK-NEXT:   ResolvedFieldDecl: @({{.*}}) x
// CHECK-NEXT:   ResolvedFieldDecl: @({{.*}}) y

struct Color {
  r: number,
  g: number,
  b: number,
  p: Point,
}
// CHECK: ResolvedStructDecl: @({{.*}}) Color:
// CHECK-NEXT:   ResolvedFieldDecl: @({{.*}}) r
// CHECK-NEXT:   ResolvedFieldDecl: @({{.*}}) g
// CHECK-NEXT:   ResolvedFieldDecl: @({{.*}}) b
// CHECK-NEXT:   ResolvedFieldDecl: @({{.*}}) p

fn main(): void {
  let x = Color { 
    r: 0,
    g: 1,
    b: 2,
    p: Point { x: 3 + 4, y: 4 * 9 },
  };
}
// CHECK: ResolvedFunctionDecl: @({{.*}}) main:
// CHECK-NEXT:   ResolvedBlock
// CHECK-NEXT:     ResolvedDeclStmt:
// CHECK-NEXT:       ResolvedVarDecl: @({{.*}}) x:
// CHECK-NEXT:         ResolvedStructInstantiationExpr: @({{.*}})
// CHECK-NEXT:           ResolvedFieldInitStmt: @({{.*}}) r
// CHECK-NEXT:             ResolvedNumberLiteral: '0'
// CHECK-NEXT:             | value: 0
// CHECK-NEXT:           ResolvedFieldInitStmt: @({{.*}}) g
// CHECK-NEXT:             ResolvedNumberLiteral: '1'
// CHECK-NEXT:             | value: 1
// CHECK-NEXT:           ResolvedFieldInitStmt: @({{.*}}) b
// CHECK-NEXT:             ResolvedNumberLiteral: '2'
// CHECK-NEXT:             | value: 2
// CHECK-NEXT:           ResolvedFieldInitStmt: @({{.*}}) p
// CHECK-NEXT:             ResolvedStructInstantiationExpr: @({{.*}})
// CHECK-NEXT:               ResolvedFieldInitStmt: @({{.*}}) x
// CHECK-NEXT:                 ResolvedBinaryOperator: '+'
// CHECK-NEXT:                 | value: 7
// CHECK-NEXT:                   ResolvedNumberLiteral: '3'
// CHECK-NEXT:                   ResolvedNumberLiteral: '4'
// CHECK-NEXT:               ResolvedFieldInitStmt: @({{.*}}) y
// CHECK-NEXT:                 ResolvedBinaryOperator: '*'
// CHECK-NEXT:                 | value: 36
// CHECK-NEXT:                   ResolvedNumberLiteral: '4'
// CHECK-NEXT:                   ResolvedNumberLiteral: '9'